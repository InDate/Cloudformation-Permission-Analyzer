AWSTemplateFormatVersion: '2010-09-09'
Description: Example CloudFormation template for various AWS resources.

Parameters:
  KeyPairName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: String
    Default: my-keypair

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: ExampleVPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ExampleIGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: ExamplePublicSubnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: ExamplePrivateSubnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ExamplePublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ExampleInstanceSG

  PublicInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      ImageId: ami-0abcdef1234567890

  PrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SubnetId: !Ref PrivateSubnet
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      ImageId: ami-0abcdef1234567890

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: example-bucket

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: exampledb
      AllocatedStorage: 20
      DBInstanceClass: db.t2.micro
      Engine: mysql
      MasterUsername: masteruser
      MasterUserPassword: masterpassword
      VPCSecurityGroups:
        - !Ref InstanceSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS instance
      SubnetIds:
        - !Ref PublicSubnet
        - !Ref PrivateSubnet
      DBSubnetGroupName: example-dbsubnetgroup

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: example-log-group
      RetentionInDays: 7

  IAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: example-policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:*
            Resource: '*'
      Roles:
        - !Ref ExampleRole

  ExampleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: example-instance-profile
      Roles:
        - !Ref ExampleRole

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: example-asg
      LaunchTemplate:
        LaunchTemplateId: !Ref ExampleLaunchTemplate
        Version: !GetAtt ExampleLaunchTemplate.LatestVersionNumber
      MinSize: '1'
      MaxSize: '3'
      DesiredCapacity: '2'
      VPCZoneIdentifier:
        - !Ref PublicSubnet

  ExampleLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: example-launch-template
      LaunchTemplateData:
        ImageId: ami-0abcdef1234567890
        InstanceType: t2.micro
        KeyName: !Ref KeyPairName
        SecurityGroupIds:
          - !Ref InstanceSecurityGroup

  RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Join ['', [!FindInMap [EnvMap, !Ref Environment, zone], '.']]
      Comment: Zone apex alias targeted to LDAPELB LoadBalancer.
      RecordSets:
        - Name: !Join ['.', ['ldap-my', !FindInMap [EnvMap, !Ref Environment, zone]]]
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt LDAPELB.CanonicalHostedZoneNameID
            DNSName: !GetAtt LDAPELB.DNSName

Outputs:
  PublicInstanceId:
    Description: Instance ID of the public EC2 instance
    Value: !Ref PublicInstance

  PrivateInstanceId:
    Description: Instance ID of the private EC2 instance
    Value: !Ref PrivateInstance

  S3BucketName:
    Description: Name of the S3 bucket
    Value: !Ref S3Bucket

  RDSInstanceEndpoint:
    Description: Endpoint of the RDS instance
    Value: !GetAtt [RDSInstance, Endpoint.Address]

  LogGroupName:
    Description: Name of the log group
    Value: !Ref LogGroup

  IAMPolicyArn:
    Description: ARN of the IAM policy
    Value: !Ref IAMPolicy

  InstanceProfileName:
    Description: Name of the instance profile
    Value: !Ref InstanceProfile

  AutoScalingGroupName:
    Description: Name of the Auto Scaling group
    Value: !Ref AutoScalingGroup

  LaunchTemplateId:
    Description: ID of the launch template
    Value: !Ref ExampleLaunchTemplate

  RecordSetGroupName:
    Description: Name of the record set group
    Value: !Ref RecordSetGroup
